package test.homework.caretha;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;

@SuppressWarnings(value="all")
public class Calculator {
	 	String str1 = "";  
	    String str2 = "";  
	    String result = "";  
	    String signal = "+";  
	    int k1 = 1;  
	    int k2 = 1;  
	    int k3 = 1;  
	    int k4 = 1;  
	    int k5 = 1;  
	    JButton store;  
	    @SuppressWarnings("rawtypes")  
	    Vector vt = new Vector(30,20);  
	      
	    JFrame frame = new JFrame("Calculator");  
	    JTextField result_TestField = new JTextField(result, 20);  
	      
	    JButton button0 = new JButton("0");  
	    JButton button1 = new JButton("1");  
	    JButton button2 = new JButton("2");  
	    JButton button3 = new JButton("3");  
	    JButton button4 = new JButton("4");  
	    JButton button5 = new JButton("5");  
	    JButton button6 = new JButton("6");  
	    JButton button7 = new JButton("7");  
	    JButton button8 = new JButton("8");  
	    JButton button9 = new JButton("9");  
	      
	    JButton button_clear = new JButton("clear");  
	    JButton button_jia = new JButton("+");  
	    JButton button_jian = new JButton("-");  
	    JButton button_cheng = new JButton("*");  
	    JButton button_chu = new JButton("/");  
	    JButton button_dy = new JButton("=");  
	    JButton button_dian = new JButton(".");  
	      
	    public Calculator(){  
	          
	        button0.setMnemonic(KeyEvent.VK_0);  
	        button1.setMnemonic(KeyEvent.VK_1);  
	        button2.setMnemonic(KeyEvent.VK_2);  
	        button3.setMnemonic(KeyEvent.VK_3);  
	        button4.setMnemonic(KeyEvent.VK_4);  
	        button5.setMnemonic(KeyEvent.VK_5);  
	        button6.setMnemonic(KeyEvent.VK_6);  
	        button7.setMnemonic(KeyEvent.VK_7);  
	        button8.setMnemonic(KeyEvent.VK_8);  
	        button9.setMnemonic(KeyEvent.VK_9);  
	          
	        result_TestField.setHorizontalAlignment(JTextField.RIGHT);  
	          
	        JPanel pan = new JPanel();  
	        pan.setLayout(new GridLayout(4,4,5,5));  
	        pan.add(button1);  
	        pan.add(button2);  
	        pan.add(button3);  
	        pan.add(button_jia);  
	        pan.add(button4);  
	        pan.add(button5);  
	        pan.add(button6);  
	        pan.add(button_jian);  
	        pan.add(button7);  
	        pan.add(button8);  
	        pan.add(button9);  
	        pan.add(button_cheng);  
	        pan.add(button0);  
	        pan.add(button_dian);  
	        pan.add(button_dy);  
	        pan.add(button_chu);  
	        pan.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));  
	          
	        JPanel pan2 = new JPanel();  
	        pan2.setLayout(new BorderLayout());  
	        pan2.add(result_TestField,BorderLayout.WEST);  
	        pan2.add(button_clear,BorderLayout.EAST);  
	          
	        frame.setLocation(300, 200);  
	        frame.setResizable(false);  
	        frame.getContentPane().setLayout(new BorderLayout());  
	        frame.getContentPane().add(pan2, BorderLayout.NORTH);  
	        frame.getContentPane().add(pan, BorderLayout.CENTER);  
	        frame.pack();  
	        frame.setVisible(true);  
	          
	        //数字键监听  
	          
	        @SuppressWarnings("unused")  
	        class Listener implements ActionListener{  
	  
	            @SuppressWarnings("unchecked")  
	            @Override  
	            public void actionPerformed(ActionEvent e) {  
	                String ss = ((JButton)e.getSource()).getText();//获取数字按钮的数字  
	                store = (JButton)e.getSource();  
	                vt.add(store);  
	                if(k1 == 1){  
	                    if(k3 == 1){  
	                        str1 = "";  
	                        k5 = 1;  
	                    }  
	                    str1 = str1 + ss;  
	                    k3 = k3 + 1;  
	                    result_TestField.setText(str1);  
	                      
	                }else if(k1 == 2){  
	                    if(k4 == 1){  
	                        str2 = "";  
	                        k5 = 1;  
	                    }  
	                    str2 = str2 + ss;  
	                    result_TestField.setText(str2);  
	                }  
	            }  
	              
	        }  
	          
	        @SuppressWarnings("unused")  
	        //运算符监听器  
	          
	        class Listener_ys implements ActionListener{  
	  
	            @SuppressWarnings("unchecked")  
	            @Override  
	            public void actionPerformed(ActionEvent e) {  
	                        String ss = ((JButton)e.getSource()).getText();  
	                        store = (JButton) e.getSource();  
	                        vt.add(store);  
	                        if(k2 == 1){  
	                            k1 = 2;  
	                            k5 = 1;  
	                            signal = ss;  
	                            k2 = k2 + 1;  
	                        }else {  
	                            int a = vt.size();  
	                            JButton c = (JButton) vt.get(a-2);  
	                            if(!(c.getText().equals("+")) &&   
	                                    !(c.getText().equals("-")) &&   
	                                    !(c.getText().equals("*")) &&   
	                                    !(c.getText().equals("/"))){  
	                                cal();  
	                                str1 = result;  
	                                k1 = 2;  
	                                k5 = 1;  
	                                k4 = 1;  
	                                signal = ss;  
	                            }  
	                        }  
	                        k2 = k2 + 1;  
	                 }  
	           }  
	          
	        //等于符号的监听器  
	          
	        @SuppressWarnings("unused")  
	        class Listener_dy implements ActionListener{  
	  
	            @SuppressWarnings("unchecked")  
	            @Override  
	            public void actionPerformed(ActionEvent e) {  
	                 store = (JButton) e.getSource();  
	                 vt.add(store);  
	                 cal();  
	                 k1 = 1;  
	                 k2 = 1;  
	                 k3 = 1;  
	                 k4 = 1;  
	                 str1 = result;  
	               //   result_TestField.setText(str1);  
	            }  
	        }  
	          
	        //清除键的监听器  
	        @SuppressWarnings("unused")  
	        class Listener_c implements ActionListener{  
	  
	            @SuppressWarnings("unchecked")  
	            @Override  
	            public void actionPerformed(ActionEvent e) {  
	                store = (JButton) e.getSource();  
	                vt.add(store);  
	                k1 = 1;  
	                k2 = 1;  
	                k3 = 1;  
	                k4 = 1;  
	                k5 = 1;  
	                str1 = "0";  
	                str2 = "0";  
	                signal = "";  
	                result = "";  
	                result_TestField.setText(result);  
	                vt.clear();  
	            }  
	              
	        }  
	          
	        @SuppressWarnings("unused")  
	        //小数点监听器  
	          
	        class Listener_dian implements ActionListener{  
	  
	            @SuppressWarnings("unchecked")  
	            @Override  
	            public void actionPerformed(ActionEvent e) {  
	                 store = (JButton) e.getSource();  
	                 vt.add(store);  
	                 if(k5 == 1){  
	                     String ss = ((JButton) e.getSource()).getText();  
	                     if(k1 == 1){  
	                         if(k3 == 1){  
	                         str1 = "";  
	                         k5 = 1;  
	                         }  
	                         str1 = str1 + ss;  
	                         k3 = k3 + 1;  
	                         result_TestField.setText(str1);  
	                     }else if(k1 == 2){  
	                         if(k4 == 1){  
	                             str2 = "";  
	                             k5 = 1;  
	                         }  
	                         str2 = str2 + ss;  
	                         k4 = k4 + 1;  
	                         result_TestField.setText(str2);  
	                     }  
	                 }  
	                 k5 = k5 + 1;  
	            }  
	              
	        }  
	          
	          
	        //注册监视器  
	        Listener listener_js = new Listener();  
	        Listener_c listener_c = new Listener_c();  
	        Listener_dian listener_dian = new Listener_dian();  
	        Listener_dy listener_dy = new Listener_dy();  
	        Listener_ys listener_ys = new Listener_ys();  
	        button7.addActionListener(listener_js);  
	        button8.addActionListener(listener_js);  
	        button9.addActionListener(listener_js);  
	        button4.addActionListener(listener_js);  
	        button5.addActionListener(listener_js);  
	        button6.addActionListener(listener_js);  
	        button1.addActionListener(listener_js);  
	        button2.addActionListener(listener_js);  
	        button3.addActionListener(listener_js);  
	        button0.addActionListener(listener_js);  
	        button_jia.addActionListener(listener_ys);  
	        button_jian.addActionListener(listener_ys);  
	        button_cheng.addActionListener(listener_ys);  
	        button_chu.addActionListener(listener_ys);  
	        button_dy.addActionListener(listener_dy);  
	        button_dian.addActionListener(listener_dian);  
	        button_clear.addActionListener(listener_c);  
	          
	        frame.addWindowListener((WindowListener) new WindowAdapter() {  
	              
	            @Override  
	            public void windowClosing(WindowEvent arg0) {  
	                 System.exit(0);                  
	            }  
	              
	              
	        });  
	    }  
	      
	     public void cal(){  
	          double b1 ;  
	          double b2 ;  
	          String c = signal;  
	          double result2 = 0;  
	          if(c.equals("")){  
	              result_TestField.setText("wrong number");  
	          }else{  
	              if(str1.equals(".")){  
	                  str1 = "0.0";  
	              }  
	              if(str2.equals(".")){  
	                  str2 = "0.0";  
	              }  
	              b1 = Double.valueOf(str1).doubleValue();  
	              b2 = Double.valueOf(str2).doubleValue();  
	              if(c.equals("+")){  
	                  result2 = b1 + b2 ;  
	              }  
	              if(c.equals("-")){  
	                  result2 = b1 - b2;  
	              }  
	              if(c.equals("*")){  
	                  result2 = b1 * b2;  
	              }  
	              if(c.equals("/")){  
	                  if(b2 == 0){  
	                      result2 = 0;  
	                  }else{  
	                      result2 = b1 / b2;  
	                  }  
	              }  
	              result = (new Double(result2)).toString();  
	              result_TestField.setText(result);  
	          }  
	            
	     }  
	      
	    public static void main(String[] args) {  
	          
	        try{  
	            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");  
	        }catch(Exception e){  
	            e.printStackTrace();  
	        }  
	                @SuppressWarnings("unused")  
	                Calculator calculator = new Calculator();  
	    }  
	  
	}  
